"use strict";(self.webpackChunkweather_app=self.webpackChunkweather_app||[]).push([[483],{1049:(e,t,r)=>{var n=r(1478);class i{static init(e){Object.defineProperty(this,"resizeTo",{set(e){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=e,e&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame((()=>this.resize())))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;let e,t;if(this._cancelResize(),this._resizeTo===globalThis.window)e=globalThis.innerWidth,t=globalThis.innerHeight;else{const{clientWidth:r,clientHeight:n}=this._resizeTo;e=r,t=n}this.renderer.resize(e,t),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}i.extension=n.Ag.Application;var a=r(6493),s=r(1456);class o{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(e){this._ticker&&this._ticker.remove(this.render,this),this._ticker=e,e&&e.add(this.render,this,a.d.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?s.R.shared:new s.R,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}o.extension=n.Ag.Application,n.XO.add(i),n.XO.add(o)},5159:(e,t,r)=>{var n=r(1478);class i{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){"pushFilter"===e.action?this._renderer.filter.push(e):"popFilter"===e.action&&this._renderer.filter.pop()}destroy(){this._renderer=null}}i.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"filter"};var a=r(3596),s=r(1960),o=r(2590),l=r(9801),d=r(5222),h=r(6675),u=r(3202),c=r(6650),p=r(6373);var f=r(279);const g=new l.V({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),format:"float32x2",stride:8,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class x{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new d.k({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new o.T({}),this.renderer=e}get activeBackTexture(){var e;return null===(e=this._activeFilterData)||void 0===e?void 0:e.backTexture}push(e){const t=this.renderer,r=e.filterEffect.filters;this._filterStack[this._filterStackIndex]||(this._filterStack[this._filterStackIndex]=this._getFilterData());const n=this._filterStack[this._filterStackIndex];if(this._filterStackIndex++,0===r.length)return void(n.skip=!0);const i=n.bounds;if(e.renderables?function(e,t){t.clear();const r=t.matrix;for(let n=0;n<e.length;n++){const r=e[n];r.globalDisplayStatus<7||(t.matrix=r.worldTransform,t.addBounds(r.bounds))}t.matrix=r}(e.renderables,i):e.filterEffect.filterArea?(i.clear(),i.addRect(e.filterEffect.filterArea),i.applyMatrix(e.container.worldTransform)):e.container.getFastGlobalBounds(!0,i),e.container){const t=(e.container.renderGroup||e.container.parentRenderGroup).cacheToLocalTransform;t&&i.applyMatrix(t)}const a=t.renderTarget.renderTarget.colorTexture.source;let s=1/0,o=0,l=!0,d=!1,h=!1,c=!0;for(let u=0;u<r.length;u++){var p,g;const e=r[u];s=Math.min(s,"inherit"===e.resolution?a._resolution:e.resolution),o+=e.padding,"off"===e.antialias?l=!1:"inherit"===e.antialias&&l&&(l=a.antialias),e.clipToViewport||(c=!1);if(!!!(e.compatibleRenderers&t.type)){h=!1;break}if(e.blendRequired&&null!==(p=null===(g=t.backBuffer)||void 0===g?void 0:g.useBackBuffer)&&void 0!==p&&!p){(0,f.R)("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),h=!1;break}h=e.enabled||h,d||(d=e.blendRequired)}if(h){if(c){const e=t.renderTarget.rootViewPort,r=t.renderTarget.renderTarget.resolution;i.fitBounds(0,e.width/r,0,e.height/r)}i.scale(s).ceil().scale(1/s).pad(0|o),i.isPositive?(n.skip=!1,n.bounds=i,n.blendRequired=d,n.container=e.container,n.filterEffect=e.filterEffect,n.previousRenderSurface=t.renderTarget.renderSurface,n.inputTexture=u.W.getOptimalTexture(i.width,i.height,s,l),t.renderTarget.bind(n.inputTexture,!0),t.globalUniforms.push({offset:i})):n.skip=!0}else n.skip=!0}pop(){const e=this.renderer;this._filterStackIndex--;const t=this._filterStack[this._filterStackIndex];if(t.skip)return;this._activeFilterData=t;const r=t.inputTexture,n=t.bounds;let i=h.g.EMPTY;if(e.renderTarget.finishRenderPass(),t.blendRequired){const r=this._filterStackIndex>0?this._filterStack[this._filterStackIndex-1].bounds:null,a=e.renderTarget.getRenderTarget(t.previousRenderSurface);i=this.getBackTexture(a,n,r)}t.backTexture=i;const a=t.filterEffect.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(i.source,3),e.globalUniforms.pop(),1===a.length)a[0].apply(this,r,t.previousRenderSurface,!1),u.W.returnTexture(r);else{let e=t.inputTexture,r=u.W.getOptimalTexture(n.width,n.height,e.source._resolution,!1),i=0;for(i=0;i<a.length-1;++i){a[i].apply(this,e,r,!0);const t=e;e=r,r=t}a[i].apply(this,e,t.previousRenderSurface,!1),u.W.returnTexture(e),u.W.returnTexture(r)}t.blendRequired&&u.W.returnTexture(i)}getBackTexture(e,t,r){const n=e.colorTexture.source._resolution,i=u.W.getOptimalTexture(t.width,t.height,n,!1);let a=t.minX,s=t.minY;r&&(a-=r.minX,s-=r.minY),a=Math.floor(a*n),s=Math.floor(s*n);const o=Math.ceil(t.width*n),l=Math.ceil(t.height*n);return this.renderer.renderTarget.copyToTexture(e,i,{x:a,y:s},{width:o,height:l},{x:0,y:0}),i}applyFilter(e,t,r,n){const i=this.renderer,a=this._filterStack[this._filterStackIndex],o=a.bounds,l=s.b.shared,d=a.previousRenderSurface===r;let u=this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution,p=this._filterStackIndex-1;for(;p>0&&this._filterStack[p].skip;)--p;p>0&&(u=this._filterStack[p].inputTexture.source._resolution);const f=this._filterGlobalUniforms,x=f.uniforms,m=x.uOutputFrame,_=x.uInputSize,v=x.uInputPixel,y=x.uInputClamp,b=x.uGlobalFrame,T=x.uOutputTexture;if(d){let e=this._filterStackIndex;for(;e>0;){e--;const t=this._filterStack[this._filterStackIndex-1];if(!t.skip){l.x=t.bounds.minX,l.y=t.bounds.minY;break}}m[0]=o.minX-l.x,m[1]=o.minY-l.y}else m[0]=0,m[1]=0;m[2]=t.frame.width,m[3]=t.frame.height,_[0]=t.source.width,_[1]=t.source.height,_[2]=1/_[0],_[3]=1/_[1],v[0]=t.source.pixelWidth,v[1]=t.source.pixelHeight,v[2]=1/v[0],v[3]=1/v[1],y[0]=.5*v[2],y[1]=.5*v[3],y[2]=t.frame.width*_[2]-.5*v[2],y[3]=t.frame.height*_[3]-.5*v[3];const w=this.renderer.renderTarget.rootRenderTarget.colorTexture;b[0]=l.x*u,b[1]=l.y*u,b[2]=w.source.width*u,b[3]=w.source.height*u;const S=this.renderer.renderTarget.getRenderTarget(r);if(i.renderTarget.bind(r,!!n),r instanceof h.g?(T[0]=r.frame.width,T[1]=r.frame.height):(T[0]=S.width,T[1]=S.height),T[2]=S.isRoot?-1:1,f.update(),i.renderPipes.uniformBatch){const e=i.renderPipes.uniformBatch.getUboResource(f);this._globalFilterBindGroup.setResource(e,0)}else this._globalFilterBindGroup.setResource(f,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,i.encoder.draw({geometry:g,shader:e,state:e._state,topology:"triangle-list"}),i.type===c.W.WEBGL&&i.renderTarget.finishRenderPass()}_getFilterData(){return{skip:!1,inputTexture:null,bounds:new p.c,container:null,filterEffect:null,blendRequired:!1,previousRenderSurface:null}}calculateSpriteMatrix(e,t){const r=this._activeFilterData,n=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),i=t.worldTransform.copyTo(a.u.shared),s=t.renderGroup||t.parentRenderGroup;return s&&s.cacheToLocalTransform&&i.prepend(s.cacheToLocalTransform),i.invert(),n.prepend(i),n.scale(1/t.texture.frame.width,1/t.texture.frame.height),n.translate(t.anchor.x,t.anchor.y),n}}x.extension={type:[n.Ag.WebGLSystem,n.Ag.WebGPUSystem],name:"filter"},n.XO.add(x),n.XO.add(i)},454:(e,t,r)=>{r.d(t,{Ls:()=>i,_Q:()=>a,mA:()=>s});var n=r(2555);const i={name:"local-uniform-bit",vertex:{header:"\n\n            struct LocalUniforms {\n                uTransformMatrix:mat3x3<f32>,\n                uColor:vec4<f32>,\n                uRound:f32,\n            }\n\n            @group(1) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        ",main:"\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        ",end:"\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        "}},a=(0,n.A)((0,n.A)({},i),{},{vertex:(0,n.A)((0,n.A)({},i.vertex),{},{header:i.vertex.header.replace("group(1)","group(2)")})}),s={name:"local-uniform-bit",vertex:{header:"\n\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        ",main:"\n            vColor *= uColor;\n            modelMatrix = uTransformMatrix;\n        ",end:"\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        "}}},9385:(e,t,r)=>{function n(e,t,r){const n=(e>>24&255)/255;t[r++]=(255&e)/255*n,t[r++]=(e>>8&255)/255*n,t[r++]=(e>>16&255)/255*n,t[r++]=n}r.d(t,{V:()=>n})},1878:(e,t,r)=>{var n=r(1478),i=r(4706),a=r(576),s=r(9769),o=r(9385),l=r(9211);class d{constructor(e,t){this.state=a.U.for2d(),this._graphicsBatchesHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.renderer=e,this._adaptor=t,this._adaptor.init(),this.renderer.renderableGC.addManagedHash(this,"_graphicsBatchesHash")}validateRenderable(e){const t=e.context,r=!!this._graphicsBatchesHash[e.uid],n=this.renderer.graphicsContext.updateGpuContext(t);return!(!n.isBatchable&&r===n.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e.didViewUpdate&&this._rebuild(e),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const t=this._graphicsBatchesHash[e.uid];if(t)for(let r=0;r<t.length;r++){const e=t[r];e._batcher.updateElement(e)}}destroyRenderable(e){this._graphicsBatchesHash[e.uid]&&this._removeBatchForRenderable(e.uid),e.off("destroyed",this._destroyRenderableBound)}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const n=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const i=n.resources.localUniforms.uniforms;i.uTransformMatrix=e.groupTransform,i.uRound=t._roundPixels|e._roundPixels,(0,o.V)(e.groupColorAlpha,i.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=!!this._graphicsBatchesHash[e.uid],r=this.renderer.graphicsContext.updateGpuContext(e.context);t&&this._removeBatchForRenderable(e.uid),r.isBatchable&&this._initBatchesForRenderable(e),e.batched=r.isBatchable}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,n=this._getBatchesForRenderable(e);for(let i=0;i<n.length;i++){const e=n[i];r.addToBatch(e,t)}}_getBatchesForRenderable(e){return this._graphicsBatchesHash[e.uid]||this._initBatchesForRenderable(e)}_initBatchesForRenderable(e){const t=e.context,r=this.renderer.graphicsContext.getGpuContext(t),n=this.renderer._roundPixels|e._roundPixels,i=r.batches.map((t=>{const r=s.Z.get(l.G);return t.copyTo(r),r.renderable=e,r.roundPixels=n,r}));return void 0===this._graphicsBatchesHash[e.uid]&&e.on("destroyed",this._destroyRenderableBound),this._graphicsBatchesHash[e.uid]=i,i}_removeBatchForRenderable(e){this._graphicsBatchesHash[e].forEach((e=>{s.Z.return(e)})),this._graphicsBatchesHash[e]=null}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null;for(const e in this._graphicsBatchesHash)this._removeBatchForRenderable(e);this._graphicsBatchesHash=null}}d.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"graphics"},n.XO.add(d),n.XO.add(i.GH)},4207:(e,t,r)=>{var n=r(1478),i=r(3596),a=r(2590),s=r(5222),o=r(2080),l=r(9769),d=r(9385),h=r(475);class u{constructor(e,t){this.localUniforms=new s.k({uTransformMatrix:{value:new i.u,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new a.T({0:this.localUniforms}),this._meshDataHash=Object.create(null),this._gpuBatchableMeshHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.renderer=e,this._adaptor=t,this._adaptor.init(),e.renderableGC.addManagedHash(this,"_gpuBatchableMeshHash"),e.renderableGC.addManagedHash(this,"_meshDataHash")}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,n=e.batched;if(t.batched=n,r!==n)return!0;if(n){const r=e._geometry;if(r.indices.length!==t.indexSize||r.positions.length!==t.vertexSize)return t.indexSize=r.indices.length,t.vertexSize=r.positions.length,!0;const n=this._getBatchableMesh(e);return n.texture.uid!==e._texture.uid&&(n._textureMatrixUpdateId=-1),!n._batcher.checkAndUpdateTexture(n,e._texture)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,{batched:n}=this._getMeshData(e);if(n){const n=this._getBatchableMesh(e);n.setTexture(e._texture),n.geometry=e._geometry,r.addToBatch(n,t)}else r.break(t),t.add(e)}updateRenderable(e){if(e.batched){const t=this._gpuBatchableMeshHash[e.uid];t.setTexture(e._texture),t.geometry=e._geometry,t._batcher.updateElement(t)}}destroyRenderable(e){this._meshDataHash[e.uid]=null;const t=this._gpuBatchableMeshHash[e.uid];t&&(l.Z.return(t),this._gpuBatchableMeshHash[e.uid]=null),e.off("destroyed",this._destroyRenderableBound)}execute(e){if(!e.isRenderable)return;e.state.blendMode=(0,o.i)(e.groupBlendMode,e.texture._source);const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),(0,d.V)(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){return this._meshDataHash[e.uid]||this._initMeshData(e)}_initMeshData(e){var t,r;return this._meshDataHash[e.uid]={batched:e.batched,indexSize:null===(t=e._geometry.indices)||void 0===t?void 0:t.length,vertexSize:null===(r=e._geometry.positions)||void 0===r?void 0:r.length},e.on("destroyed",this._destroyRenderableBound),this._meshDataHash[e.uid]}_getBatchableMesh(e){return this._gpuBatchableMeshHash[e.uid]||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=l.Z.get(h.U);return t.renderable=e,t.setTexture(e._texture),t.transform=e.groupTransform,t.roundPixels=this.renderer._roundPixels|e._roundPixels,this._gpuBatchableMeshHash[e.uid]=t,t}destroy(){for(const e in this._gpuBatchableMeshHash)this._gpuBatchableMeshHash[e]&&l.Z.return(this._gpuBatchableMeshHash[e]);this._gpuBatchableMeshHash=null,this._meshDataHash=null,this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}u.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"mesh"},n.XO.add(u)},475:(e,t,r)=>{r.d(t,{U:()=>n});class n{constructor(){this.batcherName="default",this.packAsQuad=!1,this.indexOffset=0,this.attributeOffset=0,this.roundPixels=0,this._batcher=null,this._batch=null,this._textureMatrixUpdateId=-1,this._uvUpdateId=-1}get blendMode(){return this.renderable.groupBlendMode}get topology(){return this._topology||this.geometry.topology}set topology(e){this._topology=e}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.geometry=null,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}setTexture(e){this.texture!==e&&(this.texture=e,this._textureMatrixUpdateId=-1)}get uvs(){const e=this.geometry.getBuffer("aUV"),t=e.data;let r=t;const n=this.texture.textureMatrix;return n.isSimple||(r=this._transformedUvs,this._textureMatrixUpdateId===n._updateID&&this._uvUpdateId===e._updateID||((!r||r.length<t.length)&&(r=this._transformedUvs=new Float32Array(t.length)),this._textureMatrixUpdateId=n._updateID,this._uvUpdateId=e._updateID,n.multiplyUvs(t,r))),r}get positions(){return this.geometry.positions}get indices(){return this.geometry.indices}get color(){return this.renderable.groupColorAlpha}get groupTransform(){return this.renderable.groupTransform}get attributeSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}},5231:(e,t,r)=>{var n=r(1478);class i{execute(e,t){const r=e.state,n=e.renderer,i=t.shader||e.defaultShader;i.resources.uTexture=t.texture._source,i.resources.uniforms=e.localUniforms;const a=n.gl,s=e.getBuffers(t);n.shader.bind(i),n.state.set(r),n.geometry.bind(s.geometry,i.glProgram);const o=2===s.geometry.indexBuffer.data.BYTES_PER_ELEMENT?a.UNSIGNED_SHORT:a.UNSIGNED_INT;a.drawElements(a.TRIANGLES,6*t.particleChildren.length,o,0)}}var a=r(3596),s=r(5222),o=r(2080),l=r(576),d=r(9385),h=r(5202),u=r(6333),c=r(9801),p=r(7393),f=r(1013);function g(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const r=6*e;if(r>65535?t||(t=new Uint32Array(r)):t||(t=new Uint16Array(r)),t.length!==r)throw new Error("Out buffer length is incorrect, got ".concat(t.length," and expected ").concat(r));for(let n=0,i=0;n<r;n+=6,i+=4)t[n+0]=i+0,t[n+1]=i+1,t[n+2]=i+2,t[n+3]=i+0,t[n+4]=i+2,t[n+5]=i+3;return t}function x(e,t){const r=[];r.push("\n      \n        var index = 0;\n\n        for (let i = 0; i < ps.length; ++i)\n        {\n            const p = ps[i];\n\n            ");let n=0;for(const a in e){const i=e[a];if(t!==i.dynamic)continue;r.push("offset = index + ".concat(n)),r.push(i.code);n+=(0,p.m)(i.format).stride/4}r.push("\n            index += stride * 4;\n        }\n    "),r.unshift("\n        var stride = ".concat(n,";\n    "));const i=r.join("\n");return new Function("ps","f32v","u32v",i)}class m{constructor(e){var t;this._size=0,this._generateParticleUpdateCache={};const r=this._size=null!==(t=e.size)&&void 0!==t?t:1e3,n=e.properties;let i=0,a=0;for(const h in n){const e=n[h],t=(0,p.m)(e.format);e.dynamic?a+=t.stride:i+=t.stride}this._dynamicStride=a/4,this._staticStride=i/4,this.staticAttributeBuffer=new f.u(4*r*i),this.dynamicAttributeBuffer=new f.u(4*r*a),this.indexBuffer=g(r);const s=new c.V;let o=0,l=0;this._staticBuffer=new h.h({data:new Float32Array(1),label:"static-particle-buffer",shrinkToFit:!1,usage:u.S.VERTEX|u.S.COPY_DST}),this._dynamicBuffer=new h.h({data:new Float32Array(1),label:"dynamic-particle-buffer",shrinkToFit:!1,usage:u.S.VERTEX|u.S.COPY_DST});for(const h in n){const e=n[h],t=(0,p.m)(e.format);e.dynamic?(s.addAttribute(e.attributeName,{buffer:this._dynamicBuffer,stride:4*this._dynamicStride,offset:4*o,format:e.format}),o+=t.size):(s.addAttribute(e.attributeName,{buffer:this._staticBuffer,stride:4*this._staticStride,offset:4*l,format:e.format}),l+=t.size)}s.addIndex(this.indexBuffer);const d=this.getParticleUpdate(n);this._dynamicUpload=d.dynamicUpdate,this._staticUpload=d.staticUpdate,this.geometry=s}getParticleUpdate(e){const t=function(e){const t=[];for(const r in e){const n=e[r];t.push(r,n.code,n.dynamic?"d":"s")}return t.join("_")}(e);return this._generateParticleUpdateCache[t]||(this._generateParticleUpdateCache[t]=this.generateParticleUpdate(e)),this._generateParticleUpdateCache[t]}generateParticleUpdate(e){return function(e){return{dynamicUpdate:x(e,!0),staticUpdate:x(e,!1)}}(e)}update(e,t){e.length>this._size&&(t=!0,this._size=Math.max(e.length,1.5*this._size|0),this.staticAttributeBuffer=new f.u(this._size*this._staticStride*4*4),this.dynamicAttributeBuffer=new f.u(this._size*this._dynamicStride*4*4),this.indexBuffer=g(this._size),this.geometry.indexBuffer.setDataWithSize(this.indexBuffer,this.indexBuffer.byteLength,!0));const r=this.dynamicAttributeBuffer;if(this._dynamicUpload(e,r.float32View,r.uint32View),this._dynamicBuffer.setDataWithSize(this.dynamicAttributeBuffer.float32View,e.length*this._dynamicStride*4,!0),t){const t=this.staticAttributeBuffer;this._staticUpload(e,t.float32View,t.uint32View),this._staticBuffer.setDataWithSize(t.float32View,e.length*this._staticStride*4,!0)}}destroy(){this._staticBuffer.destroy(),this._dynamicBuffer.destroy(),this.geometry.destroy()}}var _=r(5242),v=r(5920),y=r(7699),b=r(3636),T=r(6675),w=r(879),S="\nstruct ParticleUniforms {\n  uProjectionMatrix:mat3x3<f32>,\n  uColor:vec4<f32>,\n  uResolution:vec2<f32>,\n  uRoundPixels:f32,\n};\n\n@group(0) @binding(0) var<uniform> uniforms: ParticleUniforms;\n\n@group(1) @binding(0) var uTexture: texture_2d<f32>;\n@group(1) @binding(1) var uSampler : sampler;\n\nstruct VSOutput {\n    @builtin(position) position: vec4<f32>,\n    @location(0) uv : vec2<f32>,\n    @location(1) color : vec4<f32>,\n  };\n@vertex\nfn mainVertex(\n  @location(0) aVertex: vec2<f32>,\n  @location(1) aPosition: vec2<f32>,\n  @location(2) aUV: vec2<f32>,\n  @location(3) aColor: vec4<f32>,\n  @location(4) aRotation: f32,\n) -> VSOutput {\n  \n   let v = vec2(\n       aVertex.x * cos(aRotation) - aVertex.y * sin(aRotation),\n       aVertex.x * sin(aRotation) + aVertex.y * cos(aRotation)\n   ) + aPosition;\n\n   let position = vec4((uniforms.uProjectionMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\n\n    let vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uniforms.uColor;\n\n  return VSOutput(\n   position,\n   aUV,\n   vColor,\n  );\n}\n\n@fragment\nfn mainFragment(\n  @location(0) uv: vec2<f32>,\n  @location(1) color: vec4<f32>,\n  @builtin(position) position: vec4<f32>,\n) -> @location(0) vec4<f32> {\n\n    var sample = textureSample(uTexture, uSampler, uv) * color;\n   \n    return sample;\n}";class C extends b.M{constructor(){super({glProgram:v.M.from({vertex:"attribute vec2 aVertex;\nattribute vec2 aUV;\nattribute vec4 aColor;\n\nattribute vec2 aPosition;\nattribute float aRotation;\n\nuniform mat3 uTranslationMatrix;\nuniform float uRound;\nuniform vec2 uResolution;\nuniform vec4 uColor;\n\nvarying vec2 vUV;\nvarying vec4 vColor;\n\nvec2 roundPixels(vec2 position, vec2 targetSize)\n{       \n    return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n}\n\nvoid main(void){\n    float cosRotation = cos(aRotation);\n    float sinRotation = sin(aRotation);\n    float x = aVertex.x * cosRotation - aVertex.y * sinRotation;\n    float y = aVertex.x * sinRotation + aVertex.y * cosRotation;\n\n    vec2 v = vec2(x, y);\n    v = v + aPosition;\n\n    gl_Position = vec4((uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\n\n    if(uRound == 1.0)\n    {\n        gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n    }\n\n    vUV = aUV;\n    vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uColor;\n}\n",fragment:"varying vec2 vUV;\nvarying vec4 vColor;\n\nuniform sampler2D uTexture;\n\nvoid main(void){\n    vec4 color = texture2D(uTexture, vUV) * vColor;\n    gl_FragColor = color;\n}"}),gpuProgram:y.B.from({fragment:{source:S,entryPoint:"mainFragment"},vertex:{source:S,entryPoint:"mainVertex"}}),resources:{uTexture:T.g.WHITE.source,uSampler:new w.n({}),uniforms:{uTranslationMatrix:{value:new a.u,type:"mat3x3<f32>"},uColor:{value:new _.Q(16777215),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}}})}}class R{constructor(e,t){this.state=l.U.for2d(),this._gpuBufferHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.localUniforms=new s.k({uTranslationMatrix:{value:new a.u,type:"mat3x3<f32>"},uColor:{value:new Float32Array(4),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}),this.renderer=e,this.adaptor=t,this.defaultShader=new C,this.state=l.U.for2d()}validateRenderable(e){return!1}addRenderable(e,t){this.renderer.renderPipes.batch.break(t),t.add(e)}getBuffers(e){return this._gpuBufferHash[e.uid]||this._initBuffer(e)}_initBuffer(e){return this._gpuBufferHash[e.uid]=new m({size:e.particleChildren.length,properties:e._properties}),e.on("destroyed",this._destroyRenderableBound),this._gpuBufferHash[e.uid]}updateRenderable(e){}destroyRenderable(e){this._gpuBufferHash[e.uid].destroy(),this._gpuBufferHash[e.uid]=null,e.off("destroyed",this._destroyRenderableBound)}execute(e){const t=e.particleChildren;if(0===t.length)return;const r=this.renderer,n=this.getBuffers(e);e.texture||(e.texture=t[0].texture);const i=this.state;n.update(t,e._childrenDirty),e._childrenDirty=!1,i.blendMode=(0,o.i)(e.blendMode,e.texture._source);const a=this.localUniforms.uniforms,s=a.uTranslationMatrix;e.worldTransform.copyTo(s),s.prepend(r.globalUniforms.globalUniformData.projectionMatrix),a.uResolution=r.globalUniforms.globalUniformData.resolution,a.uRound=r._roundPixels|e._roundPixels,(0,d.V)(e.groupColorAlpha,a.uColor,0),this.adaptor.execute(this,e)}destroy(){this.defaultShader&&(this.defaultShader.destroy(),this.defaultShader=null)}}class M extends R{constructor(e){super(e,new i)}}M.extension={type:[n.Ag.WebGLPipes],name:"particle"};class B{execute(e,t){const r=e.renderer,n=t.shader||e.defaultShader;n.groups[0]=r.renderPipes.uniformBatch.getUniformBindGroup(e.localUniforms,!0),n.groups[1]=r.texture.getTextureBindGroup(t.texture);const i=e.state,a=e.getBuffers(t);r.encoder.draw({geometry:a.geometry,shader:t.shader||e.defaultShader,state:i,size:6*t.particleChildren.length})}}class A extends R{constructor(e){super(e,new B)}}A.extension={type:[n.Ag.WebGPUPipes],name:"particle"},n.XO.add(M),n.XO.add(A)},4821:(e,t,r)=>{var n=r(1478),i=r(9769),a=r(475),s=r(2555),o=r(4811),l=r(9859);const d=class e extends l.u{constructor(){var e;super({});let t=null!==(e=arguments.length<=0?void 0:arguments[0])&&void 0!==e?e:{};"number"===typeof t&&((0,o.t6)(o.lj,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:arguments.length<=1?void 0:arguments[1],verticesX:arguments.length<=2?void 0:arguments[2],verticesY:arguments.length<=3?void 0:arguments[3]}),this.build(t)}build(t){var r,n,i,a;t=(0,s.A)((0,s.A)({},e.defaultOptions),t),this.verticesX=null!==(r=this.verticesX)&&void 0!==r?r:t.verticesX,this.verticesY=null!==(n=this.verticesY)&&void 0!==n?n:t.verticesY,this.width=null!==(i=this.width)&&void 0!==i?i:t.width,this.height=null!==(a=this.height)&&void 0!==a?a:t.height;const o=this.verticesX*this.verticesY,l=[],d=[],h=[],u=this.verticesX-1,c=this.verticesY-1,p=this.width/u,f=this.height/c;for(let e=0;e<o;e++){const t=e%this.verticesX,r=e/this.verticesX|0;l.push(t*p,r*f),d.push(t/u,r/c)}const g=u*c;for(let e=0;e<g;e++){const t=e%u,r=e/u|0,n=r*this.verticesX+t,i=r*this.verticesX+t+1,a=(r+1)*this.verticesX+t,s=(r+1)*this.verticesX+t+1;h.push(n,i,a,i,s,a)}this.buffers[0].data=new Float32Array(l),this.buffers[1].data=new Float32Array(d),this.indexBuffer.data=new Uint32Array(h),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};d.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let h=d;const u=class e extends h{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};t=(0,s.A)((0,s.A)({},e.defaultOptions),t),super({width:t.width,height:t.height,verticesX:4,verticesY:4}),this.update(t)}update(e){var t,r,n,i,a,s,o,l,d,h;this.width=null!==(t=e.width)&&void 0!==t?t:this.width,this.height=null!==(r=e.height)&&void 0!==r?r:this.height,this._originalWidth=null!==(n=e.originalWidth)&&void 0!==n?n:this._originalWidth,this._originalHeight=null!==(i=e.originalHeight)&&void 0!==i?i:this._originalHeight,this._leftWidth=null!==(a=e.leftWidth)&&void 0!==a?a:this._leftWidth,this._rightWidth=null!==(s=e.rightWidth)&&void 0!==s?s:this._rightWidth,this._topHeight=null!==(o=e.topHeight)&&void 0!==o?o:this._topHeight,this._bottomHeight=null!==(l=e.bottomHeight)&&void 0!==l?l:this._bottomHeight,this._anchorX=null===(d=e.anchor)||void 0===d?void 0:d.x,this._anchorY=null===(h=e.anchor)||void 0===h?void 0:h.y,this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,{width:t,height:r,_leftWidth:n,_rightWidth:i,_topHeight:a,_bottomHeight:s,_anchorX:o,_anchorY:l}=this,d=n+i,h=t>d?1:t/d,u=a+s,c=r>u?1:r/u,p=Math.min(h,c),f=o*t,g=l*r;e[0]=e[8]=e[16]=e[24]=-f,e[2]=e[10]=e[18]=e[26]=n*p-f,e[4]=e[12]=e[20]=e[28]=t-i*p-f,e[6]=e[14]=e[22]=e[30]=t-f,e[1]=e[3]=e[5]=e[7]=-g,e[9]=e[11]=e[13]=e[15]=a*p-g,e[17]=e[19]=e[21]=e[23]=r-s*p-g,e[25]=e[27]=e[29]=e[31]=r-g,this.getBuffer("aPosition").update()}updateUvs(){const e=this.uvs;e[0]=e[8]=e[16]=e[24]=0,e[1]=e[3]=e[5]=e[7]=0,e[6]=e[14]=e[22]=e[30]=1,e[25]=e[27]=e[29]=e[31]=1;const t=1/this._originalWidth,r=1/this._originalHeight;e[2]=e[10]=e[18]=e[26]=t*this._leftWidth,e[9]=e[11]=e[13]=e[15]=r*this._topHeight,e[4]=e[12]=e[20]=e[28]=1-t*this._rightWidth,e[17]=e[19]=e[21]=e[23]=1-r*this._bottomHeight,this.getBuffer("aUV").update()}};u.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let c=u;class p{constructor(e){this._gpuSpriteHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.renderableGC.addManagedHash(this,"_gpuSpriteHash")}addRenderable(e,t){const r=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._gpuSpriteHash[e.uid];e.didViewUpdate&&this._updateBatchableSprite(e,t),t._batcher.updateElement(t)}validateRenderable(e){const t=this._getGpuSprite(e);return!t._batcher.checkAndUpdateTexture(t,e._texture)}destroyRenderable(e){const t=this._gpuSpriteHash[e.uid];i.Z.return(t.geometry),i.Z.return(t),this._gpuSpriteHash[e.uid]=null,e.off("destroyed",this._destroyRenderableBound)}_updateBatchableSprite(e,t){t.geometry.update(e),t.setTexture(e._texture)}_getGpuSprite(e){return this._gpuSpriteHash[e.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=i.Z.get(a.U);return t.geometry=i.Z.get(c),t.renderable=e,t.transform=e.groupTransform,t.texture=e._texture,t.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuSpriteHash[e.uid]=t,e.didViewUpdate||this._updateBatchableSprite(e,t),e.on("destroyed",this._destroyRenderableBound),t}destroy(){for(const e in this._gpuSpriteHash){this._gpuSpriteHash[e].geometry.destroy()}this._gpuSpriteHash=null,this._renderer=null}}p.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"nineSliceSprite"},n.XO.add(p)},464:(e,t,r)=>{var n=r(1478),i=r(2080),a=r(576),s=r(6650),o=r(9385),l=r(475),d=r(9859),h=r(3596),u=r(9569),c=r(454),p=r(4994),f=r(3636),g=r(5222),x=r(6675);const m={name:"tiling-bit",vertex:{header:"\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        ",main:"\n            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;\n\n            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;\n        "},fragment:{header:"\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        ",main:"\n\n            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);\n            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;\n            var unclamped = coord;\n            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);\n\n            var bias = 0.;\n\n            if(unclamped.x == coord.x && unclamped.y == coord.y)\n            {\n                bias = -32.;\n            } \n\n            outColor = textureSampleBias(uTexture, uSampler, coord, bias);\n        "}},_={name:"tiling-bit",vertex:{header:"\n            uniform mat3 uTextureTransform;\n            uniform vec4 uSizeAnchor;\n        \n        ",main:"\n            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;\n\n            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;\n        "},fragment:{header:"\n            uniform sampler2D uTexture;\n            uniform mat3 uMapCoord;\n            uniform vec4 uClampFrame;\n            uniform vec2 uClampOffset;\n        ",main:"\n\n        vec2 coord = vUV + ceil(uClampOffset - vUV);\n        coord = (uMapCoord * vec3(coord, 1.0)).xy;\n        vec2 unclamped = coord;\n        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);\n        \n        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0\n    \n        "}};let v,y;class b extends f.M{constructor(){null!==v&&void 0!==v||(v=(0,u.v)({name:"tiling-sprite-shader",bits:[c.Ls,m,p.b]})),null!==y&&void 0!==y||(y=(0,u.I)({name:"tiling-sprite-shader",bits:[c.mA,_,p.m]}));const e=new g.k({uMapCoord:{value:new h.u,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new h.u,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:y,gpuProgram:v,resources:{localUniforms:new g.k({uTransformMatrix:{value:new h.u,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:x.g.EMPTY.source,uSampler:x.g.EMPTY.source.style}})}updateUniforms(e,t,r,n,i,a){const s=this.resources.tilingUniforms,o=a.width,l=a.height,d=a.textureMatrix,h=s.uniforms.uTextureTransform;h.set(r.a*o/e,r.b*o/t,r.c*l/e,r.d*l/t,r.tx/e,r.ty/t),h.invert(),s.uniforms.uMapCoord=d.mapCoord,s.uniforms.uClampFrame=d.uClampFrame,s.uniforms.uClampOffset=d.uClampOffset,s.uniforms.uTextureTransform=h,s.uniforms.uSizeAnchor[0]=e,s.uniforms.uSizeAnchor[1]=t,s.uniforms.uSizeAnchor[2]=n,s.uniforms.uSizeAnchor[3]=i,a&&(this.resources.uTexture=a.source,this.resources.uSampler=a.source.style)}}class T extends d.u{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}const w=new T;class S{constructor(e){this._state=a.U.default2d,this._tilingSpriteDataHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.renderableGC.addManagedHash(this,"_tilingSpriteDataHash")}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const n=t.canBatch;if(n&&n===r){const{batchableMesh:r}=t;return!r._batcher.checkAndUpdateTexture(r,e.texture)}return r!==n}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const n=this._getTilingSpriteData(e),{geometry:i,canBatch:a}=n;if(a){n.batchableMesh||(n.batchableMesh=new l.U);const a=n.batchableMesh;e.didViewUpdate&&(this._updateBatchableMesh(e),a.geometry=i,a.renderable=e,a.transform=e.groupTransform,a.setTexture(e._texture)),a.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(a,t)}else r.break(t),n.shader||(n.shader=new b),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._tilingSpriteDataHash[e.uid];t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,(0,o.V)(e.groupColorAlpha,r.uColor,0),this._state.blendMode=(0,i.i)(e.groupBlendMode,e.texture._source),this._renderer.encoder.draw({geometry:w,shader:t,state:this._state})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:r}=t;e.didViewUpdate&&this._updateBatchableMesh(e),r._batcher.updateElement(r)}else if(e.didViewUpdate){const{shader:r}=t;r.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}}destroyRenderable(e){var t;const r=this._getTilingSpriteData(e);r.batchableMesh=null,null===(t=r.shader)||void 0===t||t.destroy(),this._tilingSpriteDataHash[e.uid]=null,e.off("destroyed",this._destroyRenderableBound)}_getTilingSpriteData(e){return this._tilingSpriteDataHash[e.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new d.u({indices:w.indices,positions:w.positions.slice(),uvs:w.uvs.slice()});return this._tilingSpriteDataHash[e.uid]={canBatch:!0,renderable:e,geometry:t},e.on("destroyed",this._destroyRenderableBound),this._tilingSpriteDataHash[e.uid]}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,n=e.texture.source.style;"repeat"!==n.addressMode&&(n.addressMode="repeat",n.update()),function(e,t){const r=e.texture,n=r.frame.width,i=r.frame.height;let a=0,s=0;e.applyAnchorToTexture&&(a=e.anchor.x,s=e.anchor.y),t[0]=t[6]=-a,t[2]=t[4]=1-a,t[1]=t[3]=-s,t[5]=t[7]=1-s;const o=h.u.shared;o.copyFrom(e._tileTransform.matrix),o.tx/=e.width,o.ty/=e.height,o.invert(),o.scale(e.width/n,e.height/i),function(e,t,r,n){let i=0;const a=e.length/(t||2),s=n.a,o=n.b,l=n.c,d=n.d,h=n.tx,u=n.ty;for(r*=t;i<a;){const n=e[r],a=e[r+1];e[r]=s*n+l*a+h,e[r+1]=o*n+d*a+u,r+=t,i++}}(t,2,0,o)}(e,r.uvs),function(e,t){const r=e.anchor.x,n=e.anchor.y;t[0]=-r*e.width,t[1]=-n*e.height,t[2]=(1-r)*e.width,t[3]=-n*e.height,t[4]=(1-r)*e.width,t[5]=(1-n)*e.height,t[6]=-r*e.width,t[7]=(1-n)*e.height}(e,r.positions)}destroy(){for(const e in this._tilingSpriteDataHash)this.destroyRenderable(this._tilingSpriteDataHash[e].renderable);this._tilingSpriteDataHash=null,this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let n=!0;return this._renderer.type===s.W.WEBGL&&(n=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(n||r.source.isPowerOfTwo),t.canBatch}}S.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"tilingSprite"},n.XO.add(S)},1669:(e,t,r)=>{r.d(t,{K:()=>n});class n{constructor(){this.batcherName="default",this.topology="triangle-list",this.attributeSize=4,this.indexSize=6,this.packAsQuad=!0,this.roundPixels=0,this._attributeStart=0,this._batcher=null,this._batch=null}get blendMode(){return this.renderable.groupBlendMode}get color(){return this.renderable.groupColorAlpha}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.bounds=null}}},1715:(e,t,r)=>{var n=r(1478),i=r(8656),a=r(9769),s=r(2555),o=r(3986),l=r(4811),d=r(8674),h=r(7379);const u=["context","roundPixels"];class c extends d.l{constructor(e){e instanceof h.T&&(e={context:e});const t=e||{},{context:r,roundPixels:n}=t,i=(0,o.A)(t,u);super((0,s.A)({label:"Graphics"},i)),this.renderPipeId="graphics",this._context=r||(this._ownedContext=new h.T),this._context.on("update",this.onViewUpdate,this),this.allowChildren=!1,this.roundPixels=null!==n&&void 0!==n&&n}set context(e){e!==this._context&&(this._context.off("update",this.onViewUpdate,this),this._context=e,this._context.on("update",this.onViewUpdate,this),this.onViewUpdate())}get context(){return this._context}get bounds(){return this._context.bounds}updateBounds(){}containsPoint(e){return this._context.containsPoint(e)}destroy(e){this._ownedContext&&!e?this._ownedContext.destroy(e):!0!==e&&!0!==(null===e||void 0===e?void 0:e.context)||this._context.destroy(e),this._ownedContext=null,this._context=null,super.destroy(e)}_callContextMethod(e,t){return this.context[e](...t),this}setFillStyle(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("setFillStyle",t)}setStrokeStyle(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("setStrokeStyle",t)}fill(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("fill",t)}stroke(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("stroke",t)}texture(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("texture",t)}beginPath(){return this._callContextMethod("beginPath",[])}cut(){return this._callContextMethod("cut",[])}arc(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("arc",t)}arcTo(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("arcTo",t)}arcToSvg(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("arcToSvg",t)}bezierCurveTo(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("bezierCurveTo",t)}closePath(){return this._callContextMethod("closePath",[])}ellipse(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("ellipse",t)}circle(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("circle",t)}path(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("path",t)}lineTo(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("lineTo",t)}moveTo(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("moveTo",t)}quadraticCurveTo(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("quadraticCurveTo",t)}rect(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("rect",t)}roundRect(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("roundRect",t)}poly(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("poly",t)}regularPoly(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("regularPoly",t)}roundPoly(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("roundPoly",t)}roundShape(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("roundShape",t)}filletRect(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("filletRect",t)}chamferRect(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("chamferRect",t)}star(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("star",t)}svg(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("svg",t)}restore(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("restore",t)}save(){return this._callContextMethod("save",[])}getTransform(){return this.context.getTransform()}resetTransform(){return this._callContextMethod("resetTransform",[])}rotateTransform(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("rotate",t)}scaleTransform(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("scale",t)}setTransform(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("setTransform",t)}transform(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("transform",t)}translateTransform(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("translate",t)}clear(){return this._callContextMethod("clear",[])}get fillStyle(){return this._context.fillStyle}set fillStyle(e){this._context.fillStyle=e}get strokeStyle(){return this._context.strokeStyle}set strokeStyle(e){this._context.strokeStyle=e}clone(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])return new c(this._context.clone());this._ownedContext=null;return new c(this._context)}lineStyle(e,t,r){(0,l.t6)(l.lj,"Graphics#lineStyle is no longer needed. Use Graphics#setStrokeStyle to set the stroke style.");const n={};return e&&(n.width=e),t&&(n.color=t),r&&(n.alpha=r),this.context.strokeStyle=n,this}beginFill(e,t){(0,l.t6)(l.lj,"Graphics#beginFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.");const r={};return void 0!==e&&(r.color=e),void 0!==t&&(r.alpha=t),this.context.fillStyle=r,this}endFill(){(0,l.t6)(l.lj,"Graphics#endFill is no longer needed. Use Graphics#fill to fill the shape with the desired style."),this.context.fill();const e=this.context.strokeStyle;return e.width===h.T.defaultStrokeStyle.width&&e.color===h.T.defaultStrokeStyle.color&&e.alpha===h.T.defaultStrokeStyle.alpha||this.context.stroke(),this}drawCircle(){(0,l.t6)(l.lj,"Graphics#drawCircle has been renamed to Graphics#circle");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("circle",t)}drawEllipse(){(0,l.t6)(l.lj,"Graphics#drawEllipse has been renamed to Graphics#ellipse");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("ellipse",t)}drawPolygon(){(0,l.t6)(l.lj,"Graphics#drawPolygon has been renamed to Graphics#poly");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("poly",t)}drawRect(){(0,l.t6)(l.lj,"Graphics#drawRect has been renamed to Graphics#rect");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("rect",t)}drawRoundedRect(){(0,l.t6)(l.lj,"Graphics#drawRoundedRect has been renamed to Graphics#roundRect");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("roundRect",t)}drawStar(){(0,l.t6)(l.lj,"Graphics#drawStar has been renamed to Graphics#star");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this._callContextMethod("star",t)}}var p=r(3596),f=r(4719),g=r(9569),x=r(763),m=r(1193),_=r(4994),v=r(9963),y=r(3636),b=r(5222);const T={name:"local-uniform-msdf-bit",vertex:{header:"\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32,\n                uRound:f32,\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        ",main:"\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        ",end:"\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        "},fragment:{header:"\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n         ",main:" \n            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));\n        "}},w={name:"local-uniform-msdf-bit",vertex:{header:"\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        ",main:"\n            vColor *= uColor;\n            modelMatrix *= uTransformMatrix;\n        ",end:"\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        "},fragment:{header:"\n            uniform float uDistance;\n         ",main:" \n            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));\n        "}},S={name:"msdf-bit",fragment:{header:"\n            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {\n                \n                // MSDF\n                var median = msdfColor.r + msdfColor.g + msdfColor.b -\n                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n            \n                // SDF\n                median = min(median, msdfColor.a);\n\n                var screenPxDistance = distance * (median - 0.5);\n                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));\n                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);\n                var coverage: f32 = pow(shapeColor.a * alpha, gamma);\n\n                return coverage;\n             \n            }\n        "}},C={name:"msdf-bit",fragment:{header:"\n            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {\n                \n                // MSDF\n                float median = msdfColor.r + msdfColor.g + msdfColor.b -\n                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n               \n                // SDF\n                median = min(median, msdfColor.a);\n            \n                float screenPxDistance = distance * (median - 0.5);\n                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n           \n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));\n                float gamma = mix(1.0, 1.0 / 2.2, luma);\n                float coverage = pow(shapeColor.a * alpha, gamma);  \n              \n                return coverage;\n            }\n        "}};let R,M;class B extends y.M{constructor(){const e=new b.k({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new p.u,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}}),t=(0,f.a)();null!==R&&void 0!==R||(R=(0,g.v)({name:"sdf-shader",bits:[x.F,(0,m._)(t),T,S,_.b]})),null!==M&&void 0!==M||(M=(0,g.I)({name:"sdf-shader",bits:[x.a,(0,m.P)(t),w,C,_.m]})),super({glProgram:M,gpuProgram:R,resources:{localUniforms:e,batchSamplers:(0,v.n)(t)}})}}var A=r(4048),U=r(5310);class P{constructor(e){this._gpuBitmapText={},this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.renderableGC.addManagedHash(this,"_gpuBitmapText")}validateRenderable(e){const t=this._getGpuBitmapText(e);return e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,t)),this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);k(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}destroyRenderable(e){e.off("destroyed",this._destroyRenderableBound),this._destroyRenderableByUid(e.uid)}_destroyRenderableByUid(e){const t=this._gpuBitmapText[e].context;t.customShader&&(a.Z.return(t.customShader),t.customShader=null),a.Z.return(this._gpuBitmapText[e]),this._gpuBitmapText[e]=null}updateRenderable(e){const t=this._getGpuBitmapText(e);k(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){const{context:r}=t,n=A.c.getFont(e.text,e._style);r.clear(),"none"!==n.distanceField.type&&(r.customShader||(r.customShader=a.Z.get(B)));const i=Array.from(e.text),s=e._style;let o=n.baseLineOffset;const l=(0,U.Z)(i,s,n,!0);let d=0;const h=s.padding,u=l.scale;let c=l.width,p=l.height+l.offsetY;s._stroke&&(c+=s._stroke.width/u,p+=s._stroke.width/u),r.translate(-e._anchor._x*c-h,-e._anchor._y*p-h).scale(u,u);const f=n.applyFillAsTint?s._fill.color:16777215;for(let a=0;a<l.lines.length;a++){const e=l.lines[a];for(let t=0;t<e.charPositions.length;t++){const a=i[d++],s=n.chars[a];null!==s&&void 0!==s&&s.texture&&r.texture(s.texture,f||"black",Math.round(e.charPositions[t]+s.xOffset),Math.round(o+s.yOffset))}o+=n.lineHeight}}_getGpuBitmapText(e){return this._gpuBitmapText[e.uid]||this.initGpuText(e)}initGpuText(e){const t=a.Z.get(c);return this._gpuBitmapText[e.uid]=t,this._updateContext(e,t),e.on("destroyed",this._destroyRenderableBound),this._gpuBitmapText[e.uid]}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,n=i.l.get("".concat(r,"-bitmap")),{a:a,b:s,c:o,d:l}=e.groupTransform,d=Math.sqrt(a*a+s*s),h=Math.sqrt(o*o+l*l),u=(Math.abs(d)+Math.abs(h))/2,c=n.baseRenderedFontSize/e._style.fontSize,p=u*n.distanceField.range*(1/c);t.customShader.resources.localUniforms.uniforms.uDistance=p}destroy(){for(const e in this._gpuBitmapText)this._destroyRenderableByUid(e);this._gpuBitmapText=null,this._renderer=null}}function k(e,t){t.groupTransform=e.groupTransform,t.groupColorAlpha=e.groupColorAlpha,t.groupColor=e.groupColor,t.groupBlendMode=e.groupBlendMode,t.globalDisplayStatus=e.globalDisplayStatus,t.groupTransform=e.groupTransform,t.localDisplayStatus=e.localDisplayStatus,t.groupAlpha=e.groupAlpha,t._roundPixels=e._roundPixels}P.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"bitmapText"},n.XO.add(P)},8480:(e,t,r)=>{var n=r(1478),i=r(6675),a=r(9769),s=r(1669),o=r(6595);class l{constructor(e){this._gpuText=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.runners.resolutionChange.add(this),this._renderer.renderableGC.addManagedHash(this,"_gpuText")}resolutionChange(){for(const e in this._gpuText){const t=this._gpuText[e];if(!t)continue;const r=t.batchableSprite.renderable;r._autoResolution&&(r._resolution=this._renderer.resolution,r.onViewUpdate())}}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.textureNeedsUploading?(t.textureNeedsUploading=!1,!0):t.currentKey!==r}addRenderable(e,t){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),t._batcher.updateElement(t)}destroyRenderable(e){e.off("destroyed",this._destroyRenderableBound),this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.htmlText.decreaseReferenceCount(t.currentKey),a.Z.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),n=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e).catch((e=>{console.error(e)})),e._didTextUpdate=!1,(0,o.s)(n,e)}async _updateGpuText(e){var t;e._didTextUpdate=!1;const r=this._getGpuText(e);if(r.generatingTexture)return;const n=e._getKey();this._renderer.htmlText.decreaseReferenceCount(r.currentKey),r.generatingTexture=!0,r.currentKey=n;const i=null!==(t=e.resolution)&&void 0!==t?t:this._renderer.resolution,a=await this._renderer.htmlText.getManagedTexture(e.text,i,e._style,e._getKey()),s=r.batchableSprite;s.texture=r.texture=a,r.generatingTexture=!1,r.textureNeedsUploading=!0,e.onViewUpdate(),(0,o.s)(s,e)}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:i.g.EMPTY,currentKey:"--",batchableSprite:a.Z.get(s.K),textureNeedsUploading:!1,generatingTexture:!1},r=t.batchableSprite;return r.renderable=e,r.transform=e.groupTransform,r.texture=i.g.EMPTY,r.bounds={minX:0,maxX:1,minY:0,maxY:0},r.roundPixels=this._renderer._roundPixels|e._roundPixels,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,this._gpuText[e.uid]=t,e.on("destroyed",this._destroyRenderableBound),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}l.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"htmlText"};var d=r(9445),h=r(3202),u=r(6650),c=r(3144);var p=r(279),f=r(4749);const g="http://www.w3.org/2000/svg",x="http://www.w3.org/1999/xhtml";class m{constructor(){this.svgRoot=document.createElementNS(g,"svg"),this.foreignObject=document.createElementNS(g,"foreignObject"),this.domElement=document.createElementNS(x,"div"),this.styleElement=document.createElementNS(x,"style"),this.image=new Image;const{foreignObject:e,svgRoot:t,styleElement:r,domElement:n}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",t.appendChild(e),e.appendChild(r),e.appendChild(n)}}var _=r(2555),v=r(2100),y=r(3686),b=r(5242);function T(e){const t=e._stroke,r=e._fill,n=["color: ".concat(b.Q.shared.setValue(r.color).toHex()),"font-size: ".concat(e.fontSize,"px"),"font-family: ".concat(e.fontFamily),"font-weight: ".concat(e.fontWeight),"font-style: ".concat(e.fontStyle),"font-variant: ".concat(e.fontVariant),"letter-spacing: ".concat(e.letterSpacing,"px"),"text-align: ".concat(e.align),"padding: ".concat(e.padding,"px"),"white-space: ".concat("pre"===e.whiteSpace&&e.wordWrap?"pre-wrap":e.whiteSpace),...e.lineHeight?["line-height: ".concat(e.lineHeight,"px")]:[],...e.wordWrap?["word-wrap: ".concat(e.breakWords?"break-all":"break-word"),"max-width: ".concat(e.wordWrapWidth,"px")]:[],...t?[S(t)]:[],...e.dropShadow?[w(e.dropShadow)]:[],...e.cssOverrides].join(";"),i=["div { ".concat(n," }")];return function(e,t){for(const r in e){const n=e[r],i=[];for(const e in n)R[e]?i.push(R[e](n[e])):C[e]&&i.push(C[e].replace("{{VALUE}}",n[e]));t.push("".concat(r," { ").concat(i.join(";")," }"))}}(e.tagStyles,i),i.join(" ")}function w(e){const t=b.Q.shared.setValue(e.color).setAlpha(e.alpha).toHexa(),r=Math.round(Math.cos(e.angle)*e.distance),n=Math.round(Math.sin(e.angle)*e.distance),i="".concat(r,"px ").concat(n,"px");return e.blur>0?"text-shadow: ".concat(i," ").concat(e.blur,"px ").concat(t):"text-shadow: ".concat(i," ").concat(t)}function S(e){return["-webkit-text-stroke-width: ".concat(e.width,"px"),"-webkit-text-stroke-color: ".concat(b.Q.shared.setValue(e.color).toHex()),"text-stroke-width: ".concat(e.width,"px"),"text-stroke-color: ".concat(b.Q.shared.setValue(e.color).toHex()),"paint-order: stroke"].join(";")}const C={fontSize:"font-size: {{VALUE}}px",fontFamily:"font-family: {{VALUE}}",fontWeight:"font-weight: {{VALUE}}",fontStyle:"font-style: {{VALUE}}",fontVariant:"font-variant: {{VALUE}}",letterSpacing:"letter-spacing: {{VALUE}}px",align:"text-align: {{VALUE}}",padding:"padding: {{VALUE}}px",whiteSpace:"white-space: {{VALUE}}",lineHeight:"line-height: {{VALUE}}px",wordWrapWidth:"max-width: {{VALUE}}px"},R={fill:e=>"color: ".concat(b.Q.shared.setValue(e).toHex()),breakWords:e=>"word-wrap: ".concat(e?"break-all":"break-word"),stroke:S,dropShadow:w};class M extends v.x{constructor(){var e,t;let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(r),this._cssOverrides=[],null!==(e=this.cssOverrides)&&void 0!==e||(this.cssOverrides=r.cssOverrides),this.tagStyles=null!==(t=r.tagStyles)&&void 0!==t?t:{}}set cssOverrides(e){this._cssOverrides=e instanceof Array?e:[e],this.update()}get cssOverrides(){return this._cssOverrides}_generateKey(){return this._styleKey=(0,y.V)(this)+this._cssOverrides.join("-"),this._styleKey}update(){this._cssStyle=null,super.update()}clone(){return new M({align:this.align,breakWords:this.breakWords,dropShadow:this.dropShadow?(0,_.A)({},this.dropShadow):null,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,cssOverrides:this.cssOverrides})}get cssStyle(){return this._cssStyle||(this._cssStyle=T(this)),this._cssStyle}addOverride(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];const n=t.filter((e=>!this.cssOverrides.includes(e)));n.length>0&&(this.cssOverrides.push(...n),this.update())}removeOverride(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];const n=t.filter((e=>this.cssOverrides.includes(e)));n.length>0&&(this.cssOverrides=this.cssOverrides.filter((e=>!n.includes(e))),this.update())}set fill(e){"string"!==typeof e&&"number"!==typeof e&&(0,p.R)("[HTMLTextStyle] only color fill is not supported by HTMLText"),super.fill=e}set stroke(e){e&&"string"!==typeof e&&"number"!==typeof e&&(0,p.R)("[HTMLTextStyle] only color stroke is not supported by HTMLText"),super.stroke=e}}var B=r(8656);async function A(e,t){const r=await async function(e){const t=await c.e.get().fetch(e),r=await t.blob(),n=new FileReader;return await new Promise(((e,t)=>{n.onloadend=()=>e(n.result),n.onerror=t,n.readAsDataURL(r)}))}(t);return'@font-face {\n        font-family: "'.concat(e.fontFamily,"\";\n        src: url('").concat(r,"');\n        font-weight: ").concat(e.fontWeight,";\n        font-style: ").concat(e.fontStyle,";\n    }")}const U=new Map;let P;class k{constructor(e){this._activeTextures={},this._renderer=e,this._createCanvas=e.type===u.W.WEBGPU}getTexture(e){return this._buildTexturePromise(e.text,e.resolution,e.style)}getManagedTexture(e,t,r,n){if(this._activeTextures[n])return this._increaseReferenceCount(n),this._activeTextures[n].promise;const i=this._buildTexturePromise(e,t,r).then((e=>(this._activeTextures[n].texture=e,e)));return this._activeTextures[n]={texture:null,promise:i,usageCount:1},i}async _buildTexturePromise(e,t,r){const n=a.Z.get(m),i=function(e,t){const r=t.fontFamily,n=[],i={},a=e.match(/font-family:([^;"\s]+)/g);function s(e){i[e]||(n.push(e),i[e]=!0)}if(Array.isArray(r))for(let o=0;o<r.length;o++)s(r[o]);else s(r);a&&a.forEach((e=>{s(e.split(":")[1].trim())}));for(const o in t.tagStyles)s(t.tagStyles[o].fontFamily);return n}(e,r),s=await async function(e,t,r){const n=e.filter((e=>B.l.has("".concat(e,"-and-url")))).map(((e,n)=>{if(!U.has(e)){const{url:i}=B.l.get("".concat(e,"-and-url"));0===n?U.set(e,A({fontWeight:t.fontWeight,fontStyle:t.fontStyle,fontFamily:e},i)):U.set(e,A({fontWeight:r.fontWeight,fontStyle:r.fontStyle,fontFamily:e},i))}return U.get(e)}));return(await Promise.all(n)).join("\n")}(i,r,M.defaultTextStyle),o=function(e,t,r,n){n||(n=P||(P=new m));const{domElement:i,styleElement:a,svgRoot:s}=n;i.innerHTML="<style>".concat(t.cssStyle,";</style><div style='padding:0'>").concat(e,"</div>"),i.setAttribute("style","transform-origin: top left; display: inline-block"),r&&(a.textContent=r),document.body.appendChild(s);const o=i.getBoundingClientRect();s.remove();const l=2*t.padding;return{width:o.width-l,height:o.height-l}}(e,r,s,n),l=Math.ceil(Math.ceil(Math.max(1,o.width)+2*r.padding)*t),h=Math.ceil(Math.ceil(Math.max(1,o.height)+2*r.padding)*t),u=n.image;u.width=2+(0|l),u.height=2+(0|h);const p=function(e,t,r,n,i){const{domElement:a,styleElement:s,svgRoot:o}=i;a.innerHTML="<style>".concat(t.cssStyle,"</style><div style='padding:0;'>").concat(e,"</div>"),a.setAttribute("style","transform: scale(".concat(r,");transform-origin: top left; display: inline-block")),s.textContent=n;const{width:l,height:d}=i.image;return o.setAttribute("width",l.toString()),o.setAttribute("height",d.toString()),(new XMLSerializer).serializeToString(o)}(e,r,t,s,n);await function(e,t,r){return new Promise((async n=>{r&&await new Promise((e=>setTimeout(e,100))),e.onload=()=>{n()},e.src="data:image/svg+xml;charset=utf8,".concat(encodeURIComponent(t)),e.crossOrigin="anonymous"}))}(u,p,function(){const{userAgent:e}=c.e.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(e)}()&&i.length>0);const g=u;let x;this._createCanvas&&(x=function(e,t){const r=d.N.getOptimalCanvasAndContext(e.width,e.height,t),{context:n}=r;return n.clearRect(0,0,e.width,e.height),n.drawImage(e,0,0),r}(u,t));const _=(0,f.M)(x?x.canvas:g,u.width-2,u.height-2,t);return this._createCanvas&&(this._renderer.texture.initSource(_.source),d.N.returnCanvasAndContext(x)),a.Z.return(n),_}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];t&&(t.usageCount--,0===t.usageCount&&(t.texture?this._cleanUp(t):t.promise.then((e=>{t.texture=e,this._cleanUp(t)})).catch((()=>{(0,p.R)("HTMLTextSystem: Failed to clean texture")})),this._activeTextures[e]=null))}_cleanUp(e){h.W.returnTexture(e.texture),e.texture.source.resource=null,e.texture.source.uploadMethodId="unknown"}getReferenceCount(e){return this._activeTextures[e].usageCount}destroy(){this._activeTextures=null}}k.extension={type:[n.Ag.WebGLSystem,n.Ag.WebGPUSystem,n.Ag.CanvasSystem],name:"htmlText"},k.defaultFontOptions={fontFamily:"Arial",fontStyle:"normal",fontWeight:"normal"},n.XO.add(k),n.XO.add(l)},2394:(e,t,r)=>{var n=r(1478),i=r(9769),a=r(1669),s=r(6595);class o{constructor(e){this._gpuText=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.runners.resolutionChange.add(this),this._renderer.renderableGC.addManagedHash(this,"_gpuText")}resolutionChange(){for(const e in this._gpuText){const t=this._gpuText[e];if(!t)continue;const r=t.batchableSprite.renderable;r._autoResolution&&(r._resolution=this._renderer.resolution,r.onViewUpdate())}}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.currentKey!==r}addRenderable(e,t){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),t._batcher.updateElement(t)}destroyRenderable(e){e.off("destroyed",this._destroyRenderableBound),this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.canvasText.decreaseReferenceCount(t.currentKey),i.Z.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),n=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e),e._didTextUpdate=!1,(0,s.s)(n,e)}_updateGpuText(e){const t=this._getGpuText(e),r=t.batchableSprite;t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey),t.texture=r.texture=this._renderer.canvasText.getManagedTexture(e),t.currentKey=e._getKey(),r.texture=t.texture}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:null,currentKey:"--",batchableSprite:i.Z.get(a.K)};return t.batchableSprite.renderable=e,t.batchableSprite.transform=e.groupTransform,t.batchableSprite.bounds={minX:0,maxX:1,minY:0,maxY:0},t.batchableSprite.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,this._updateText(e),e.on("destroyed",this._destroyRenderableBound),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}o.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"text"};var l=r(5242),d=r(8186),h=r(9445),u=r(3202),c=r(4307);function p(e,t,r){for(let n=0,i=4*r*t;n<t;++n,i+=4)if(0!==e[i+3])return!1;return!0}function f(e,t,r,n,i){const a=4*t;for(let s=n,o=n*a+4*r;s<=i;++s,o+=a)if(0!==e[o+3])return!1;return!0}var g=r(4811),x=r(2100),m=r(4749),_=r(7821),v=r(1915),y=r(5435);class b{constructor(e){this._activeTextures={},this._renderer=e}getTextureSize(e,t,r){const n=_.P.measureText(e||" ",r);let i=Math.ceil(Math.ceil(Math.max(1,n.width)+2*r.padding)*t),a=Math.ceil(Math.ceil(Math.max(1,n.height)+2*r.padding)*t);return i=Math.ceil(i-1e-6),a=Math.ceil(a-1e-6),i=(0,d.U5)(i),a=(0,d.U5)(a),{width:i,height:a}}getTexture(e,t,r,n){"string"===typeof e&&((0,g.t6)("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),e={text:e,style:r,resolution:t}),e.style instanceof x.x||(e.style=new x.x(e.style));const{texture:i,canvasAndContext:a}=this.createTextureAndCanvas(e);return this._renderer.texture.initSource(i._source),h.N.returnCanvasAndContext(a),i}createTextureAndCanvas(e){var t;const{text:r,style:n}=e,i=null!==(t=e.resolution)&&void 0!==t?t:this._renderer.resolution,a=_.P.measureText(r||" ",n),s=Math.ceil(Math.ceil(Math.max(1,a.width)+2*n.padding)*i),o=Math.ceil(Math.ceil(Math.max(1,a.height)+2*n.padding)*i),l=h.N.getOptimalCanvasAndContext(s,o),{canvas:d}=l;this.renderTextToCanvas(r,n,i,l);const u=(0,m.M)(d,s,o,i);if(n.trim){const e=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;const{width:r,height:n}=e,i=e.getContext("2d",{willReadFrequently:!0});if(null===i)throw new TypeError("Failed to get canvas 2D context");const a=i.getImageData(0,0,r,n).data;let s=0,o=0,l=r-1,d=n-1;for(;o<n&&p(a,r,o);)++o;if(o===n)return c.M.EMPTY;for(;p(a,r,d);)--d;for(;f(a,r,s,o,d);)++s;for(;f(a,r,l,o,d);)--l;return++l,++d,new c.M(s/t,o/t,(l-s)/t,(d-o)/t)}(d,i);u.frame.copyFrom(e),u.updateUvs()}return{texture:u,canvasAndContext:l}}getManagedTexture(e){e._resolution=e._autoResolution?this._renderer.resolution:e.resolution;const t=e._getKey();if(this._activeTextures[t])return this._increaseReferenceCount(t),this._activeTextures[t].texture;const{texture:r,canvasAndContext:n}=this.createTextureAndCanvas(e);return this._activeTextures[t]={canvasAndContext:n,texture:r,usageCount:1},r}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}returnTexture(e){const t=e.source;t.resource=null,t.uploadMethodId="unknown",t.alphaMode="no-premultiply-alpha",u.W.returnTexture(e)}decreaseReferenceCount(e){const t=this._activeTextures[e];t.usageCount--,0===t.usageCount&&(h.N.returnCanvasAndContext(t.canvasAndContext),this.returnTexture(t.texture),this._activeTextures[e]=null)}getReferenceCount(e){return this._activeTextures[e].usageCount}renderTextToCanvas(e,t,r,n){var i;const{canvas:a,context:s}=n,o=(0,v.Z)(t),d=_.P.measureText(e||" ",t),h=d.lines,u=d.lineHeight,c=d.lineWidths,p=d.maxLineWidth,f=d.fontProperties,g=a.height;if(s.resetTransform(),s.scale(r,r),s.textBaseline=t.textBaseline,null!==(i=t._stroke)&&void 0!==i&&i.width){const e=t._stroke;s.lineWidth=e.width,s.miterLimit=e.miterLimit,s.lineJoin=e.join,s.lineCap=e.cap}let x,m;s.font=o;const b=t.dropShadow?2:1;for(let _=0;_<b;++_){var T,w;const e=t.dropShadow&&0===_,i=e?Math.ceil(Math.max(1,g)+2*t.padding):0,a=i*r;if(e){s.fillStyle="black",s.strokeStyle="black";const e=t.dropShadow,n=e.color,i=e.alpha;s.shadowColor=l.Q.shared.setValue(n).setAlpha(i).toRgbaString();const o=e.blur*r,d=e.distance*r;s.shadowBlur=o,s.shadowOffsetX=Math.cos(e.angle)*d,s.shadowOffsetY=Math.sin(e.angle)*d+a}else{var S;if(s.fillStyle=t._fill?(0,y.r)(t._fill,s,d):null,null!==(S=t._stroke)&&void 0!==S&&S.width){const e=t._stroke.width*t._stroke.alignment;s.strokeStyle=(0,y.r)(t._stroke,s,d,e)}s.shadowColor="black"}let o=(u-f.fontSize)/2;u-f.fontSize<0&&(o=0);const v=null!==(T=null===(w=t._stroke)||void 0===w?void 0:w.width)&&void 0!==T?T:0;for(let r=0;r<h.length;r++){var C;x=v/2,m=v/2+r*u+f.ascent+o,"right"===t.align?x+=p-c[r]:"center"===t.align&&(x+=(p-c[r])/2),null!==(C=t._stroke)&&void 0!==C&&C.width&&this._drawLetterSpacing(h[r],t,n,x+t.padding,m+t.padding-i,!0),void 0!==t._fill&&this._drawLetterSpacing(h[r],t,n,x+t.padding,m+t.padding-i)}}}_drawLetterSpacing(e,t,r,n,i){let a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const{context:s}=r,o=t.letterSpacing;let l=!1;if(_.P.experimentalLetterSpacingSupported&&(_.P.experimentalLetterSpacing?(s.letterSpacing="".concat(o,"px"),s.textLetterSpacing="".concat(o,"px"),l=!0):(s.letterSpacing="0px",s.textLetterSpacing="0px")),0===o||l)return void(a?s.strokeText(e,n,i):s.fillText(e,n,i));let d=n;const h=_.P.graphemeSegmenter(e);let u=s.measureText(e).width,c=0;for(let p=0;p<h.length;++p){const e=h[p];a?s.strokeText(e,d,i):s.fillText(e,d,i);let t="";for(let r=p+1;r<h.length;++r)t+=h[r];c=s.measureText(t).width,d+=u-c+o,u=c}}destroy(){this._activeTextures=null}}b.extension={type:[n.Ag.WebGLSystem,n.Ag.WebGPUSystem,n.Ag.CanvasSystem],name:"canvasText"},n.XO.add(b),n.XO.add(o)},4749:(e,t,r)=>{r.d(t,{M:()=>a});var n=r(3202);const i=new(r(6373).c);function a(e,t,r,a){const s=i;s.minX=0,s.minY=0,s.maxX=e.width/a|0,s.maxY=e.height/a|0;const o=n.W.getOptimalTexture(s.width,s.height,a,!1);return o.source.uploadMethodId="image",o.source.resource=e,o.source.alphaMode="premultiply-alpha-on-upload",o.frame.width=t/a,o.frame.height=r/a,o.source.emit("update",o.source),o.updateUvs(),o}},6595:(e,t,r)=>{r.d(t,{s:()=>i});var n=r(3693);function i(e,t){const{texture:r,bounds:i}=e;(0,n.y)(i,t._anchor,r);const a=t._style.padding;i.minX-=a,i.minY-=a,i.maxX-=a,i.maxY-=a}}}]);
//# sourceMappingURL=483.786f60b6.chunk.js.map